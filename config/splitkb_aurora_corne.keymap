/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer ref
#define _DEV        1
#define _NUM_NAV    2
#define _FUN_BT     3
#define _MAC        4


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ██████████████████████████████████████████████████████████████████████████████████
            // █| TAB |  Q  |  W  |  E  |  R  |  T  |███|  Y  |  U  |  I  |  O  |  P  |BSPC |█
            // █|LSHFT|  A  |  S  |  D  |  F  |  G  |███|  H  |  J  |  K  |  L  |  ;: | '"" |█
            // █|LALT |  Z  |  X  |  C  |  V  |  B  |███|  N  |  M  |  ,< |  .> |  /? | ESC |█
            // ███████████████████|LCTRL| NUM |SPACE|███| RET | DEV | CMD |███████████████████
            // ██████████████████████████████████████████████████████████████████████████████████
            bindings = <
            &kp TAB     &kp Q   &kp W   &kp E       &kp R           &kp T           &kp Y   &kp U       &kp I       &kp O   &kp P       &kp BSPC
            &kp LSHFT   &kp A   &kp S   &kp D       &kp F           &kp G           &kp H   &kp J       &kp K       &kp L   &kp SEMI    &kp SQT
            &kp LALT    &kp Z   &kp X   &kp C       &kp V           &kp B           &kp N   &kp M       &kp COMMA   &kp DOT &kp FSLH    &kp ESC
                                        &kp LCTRL   &mo _NUM_NAV    &kp SPACE       &kp RET &mo _DEV    &kp LCMD
            >
        };
        
        // _DEV
        dev_layer {
            // ███████████████████████████████████████████████████████████████████████████████
            // █|     |  !  |  @  |  #  |  $  |  %  |███|  `  |  {  |  }  |  &  | "|" | DEL |█
            // █|     |     |     |     |     |     |███|  -  |  (  |  )  |  =  |  +  |  ^  |█
            // █|     |     |     |     |     |     |███|  _  |  [  |  ]  |  *  |  \  |  ~  |█
            // ███████████████████|     | FUN |     |███|     |     |     |███████████████████
            // ███████████████████████████████████████████████████████████████████████████████
            bindings = <
            &trans  &kp EXCL    &kp AT  &kp HASH    &kp DLLR    &kp PRCNT       &kp GRAVE   &kp LBRC    &kp RBRC    &kp AMPS        &kp PIPE    &kp DEL
            &trans  &trans      &trans  &trans      &trans      &trans          &kp MINUS   &kp LPAR    &kp RPAR    &kp EQUAL       &kp PLUS    &kp CARET
            &trans  &trans      &trans  &trans      &trans      &trans          &kp UNDER   &kp LBKT    &kp RBKT    &kp KP_MULTIPLY &kp BSLH    &kp TILDE
                                        &trans      &mo _FUN_BT    &trans          &trans      &trans      &trans 
                             
            >
        }FUN

        // _NUM_NAV
        numbers_and_nav_layer {
            // ██████████████████████████████████████████████████████████████████████████████████
            // █|     |     |  1  |  2  |  3  |C_VOL_UP|███|PSCRN|HOME | UP  | END |PG_UP|     |█
            // █|     |  0  |  4  |  5  |  6  |C_VOL_DN|███|     |LEFT |DOWN |RIGHT|PG_DN|     |█
            // █|     |     |  7  |  8  |  9  |C_MUTE  |███|     |     |     |     |     |     |█
            // ███████████████████|     |     |        |███|     | MAC |     |███████████████████
            // ██████████████████████████████████████████████████████████████████████████████████
            bindings = <
            &trans  &trans  &kp N1  &kp N2  &kp N3  &kp C_VOL_UP        &kp PSCRN   &kp HOME    &kp UP      &kp END     &kp PG_UP   &trans
            &trans  &kp N0  &kp N4  &kp N5  &kp N6  &kp C_VOL_DN        &trans      &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN   &trans
            &trans  &trans  &kp N7  &kp N8  &kp N9  &kp C_MUTE          &trans      &trans      &trans      &trans      &trans      &trans
                                    &trans  &trans  &trans              &trans      &tog _MAC   &trans 
                             
            >
        };

        // _FUN_BT
        function_bt_layer {
            // █████████████████████████████████████████████████████████████████████████████████
            // █|     |     | F1  | F2  | F3  | F10 |███|BT_CLR |     |     |     |     |     |█
            // █|     |     | F4  | F5  | F6  | F11 |███|       | BT0 | BT1 | BT2 | BT3 |     |█
            // █|     |     | F7  | F8  | F9  | F12 |███|OUT_TOG|     |     |     |     |     |█
            // ███████████████████|     |     |     |███|       |     |     |███████████████████
            // █████████████████████████████████████████████████████████████████████████████████
            bindings = <
            &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10     &bt BT_CLR   &trans          &trans          &trans          &trans          &trans
            &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11     &trans       &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans
            &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12     &out OUT_TOG &trans          &trans          &trans          &trans          &trans
                                    &trans  &trans  &trans      &trans       &trans          &trans
            >
        };

        // _MAC
        mac_layer {
            // ███████████████████████████████████████████████████████████████████████████████
            // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█
            // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█
            // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█   
   
   
            bindings = <
            &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                    &kp LGUI  &trans  &trans    &trans  &trans  &kp LCTRL 
                             
            >
        };

        // BLANK TEMPLATE
        // XXXX_layer {
        //     // ███████████████████████████████████████████████████████████████████████████████
        //     // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█
        //     // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█
        //     // █|     |     |     |     |     |     |███|     |     |     |     |     |     |█
        //     // ███████████████████|     |     |     |███|     |     |     |███████████████████
        //     // ███████████████████████████████████████████████████████████████████████████████
        //     bindings = <
        //     &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
        //     &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
        //     &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
        //                             &trans  &trans  &trans      &trans  &trans  &trans 
                             
        //     >
        // };

    };
};
